---
- name: Check if neovim is installed
  ansible.builtin.command: which nvim
  changed_when: false
  ignore_errors: true
  register: is_installed

- name: Check installed version of neovim
  ansible.builtin.command: nvim --version
  changed_when: false
  when: is_installed.rc == 0
  register: version

- name: If latest check for updates
  ansible.builtin.uri:
    url: https://api.github.com/repos/neovim/neovim/releases/latest
    return_content: true
  when: neovim.version == 'latest'
  register: latest_info

- name: Set version string
  ansible.builtin.set_fact:
    ver: "{{ latest_info.json.tag_name if neovim.version == 'latest' else neovim.version }}"

- name: Install neovim
  when: version.stdout_lines[0] != 'NVIM ' + ver
  block:
    - name: Get release info
      ansible.builtin.uri:
        url: "https://api.github.com/repos/neovim/neovim/releases/tags/{{ ver }}"
        return_content: true
      register: tag_info

    - name: Appimage install
      when: ansible_architecture == 'x86_64'
      block:
        - name: Get Appimage download link
          ansible.builtin.set_fact:
            download_url: >-
              {{
                tag_info.json.assets |
                community.general.json_query('[?content_type==`application/vnd.appimage`].browser_download_url') |
                join('')
              }}

        - name: Download neovim appimage
          ansible.builtin.get_url:
            url: "{{ download_url }}"
            dest: /usr/local/bin/nvim.appimage
            mode: "0555"
            checksum: "sha256:{{ download_url }}.sha256sum"
          become: true

    - name: Source compile
      when: ansible_architecture != 'x86_64'
      block:
        - name: Install build prerequisites
          ansible.builtin.apt:
            pkg:
              - ninja-build
              - gettext
              - cmake
              - unzip
              - curl
              - git

        - name: Clone neovim repo
          ansible.builtin.git:
            repo: https://github.com/neovim/neovim.git
            dest: /tmp/neovim
            single_branch: true
            depth: 1
            version: "{{ ver }}"

        - name: Compile neovim
          community.general.make:
            chdir: /tmp/neovim
            params:
              CMAKE_BUILD_TYPE: Release

        - name: Install neovim
          community.general.make:
            chdir: /tmp/neovim
            target: install
          become: true

      always:
        - name: Clean
          ansible.builtin.file:
            path: /tmp/neovim
            state: absent

    - name: Install pip
      ansible.builtin.apt:
        name: python3-pip
        state: present
      become: true

    - name: Install/update neovim plugin
      ansible.builtin.pip:
        name: neovim
        state: latest
        executable: pip3
        extra_args: --user

- name: After first install
  when: is_installed.rc != 0
  block:
    - name: Make sure neovim is the default editor
      community.general.alternatives:
        name: "{{ item }}"
        path: /usr/local/bin/nvim.appimage
        priority: 110
      become: true
      ignore_errors: true
      with_items:
        - ex
        - vi
        - view
        - vim
        - vimdiff
        - editor
        - nvim
        - neovim

      # TODO: I haven't found a good way for change_when to reflect when plugins are actually installed
    - name: Install plugins
      ansible.builtin.command: "nvim '+silent! {{ neovim.plugin_install }}' +qal!"
      changed_when: false
